"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.simpleWalk = exports.hasDynamicImport = exports.viteIgnoreRegex = exports.importeeRawRegex = exports.normallyImporteeRegex = exports.dynamicImportRegex = void 0;
const vite_plugin_utils_1 = require("vite-plugin-utils");
exports.dynamicImportRegex = /\bimport[\s\r\n]*?\(/;
// this is probably less accurate
exports.normallyImporteeRegex = /^\.{1,2}\/[.-/\w]+(\.\w+)$/;
// [, startQuotation, importee, endQuotation]
exports.importeeRawRegex = /^([`'"]{1})(.*)([`'"]{1})$/;
exports.viteIgnoreRegex = /\/\*\s*@vite-ignore\s*\*\//;
function hasDynamicImport(code) {
    code = code
        .replace(vite_plugin_utils_1.singlelineCommentsRE, '')
        .replace(vite_plugin_utils_1.multilineCommentsRE, '');
    return exports.dynamicImportRegex.test(code);
}
exports.hasDynamicImport = hasDynamicImport;
async function simpleWalk(ast, visitors) {
    var _a;
    if (!ast)
        return;
    if (Array.isArray(ast)) {
        for (const element of ast) {
            await simpleWalk(element, visitors);
        }
    }
    else {
        for (const key of Object.keys(ast)) {
            await (typeof ast[key] === 'object' && simpleWalk(ast[key], visitors));
        }
    }
    await ((_a = visitors[ast.type]) === null || _a === void 0 ? void 0 : _a.call(visitors, ast));
}
exports.simpleWalk = simpleWalk;
